spring.jpa.generate-ddl=true

spring.datasource.url = jdbc:mysql://localhost:3308/db_cinema?serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password =
#spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.servlet.multipart.max-file-size=30000KB
spring.servlet.multipart.max-request-size=30000KB

#disabling cache for the development purpose
spring.template.cache=false
spring.thymeleaf.cache=false

#secure token configuration
#60 * 60 * 8 // setting as 8 hours,
jdj.secure.token.validity = 28800
site.base.url.http=http://192.168.43.101:8080
site.base.url.https=http://192.168.43.101:8080


########## SMTP configuration to send out emails ##########
####### Make sure to use the correct SMTP configurations #######
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=vitechprovitech@gmail.com
spring.mail.password=Varus9192
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com



########### SSL Configuration ##########
# The format used for the keystore. for JKS, set it as JKS
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:javadevjournal.p12
# The password used to generate the certificate
#server.ssl.key-store-password=123456
# The alias mapped to the certificate
#server.ssl.key-alias=javadevjournal

# Run Spring Boot on HTTPS only
#server.port=8443

#HTTP port
#http.port=8080


